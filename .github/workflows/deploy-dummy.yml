name: Dummy Deploy - Add Project to Snyk Collection

on:
  workflow_dispatch:
    inputs:
      image_uri:
        description: "プロジェクトIDとして扱う image_uri を指定 (例: 123456789012.dkr.ecr.ap-northeast-1.amazonaws.com/github-actions-snyk-test:sha)"
        required: true
        type: string
      collection_name:
        description: "追加先のSnykコレクション名"
        required: true
        type: string

permissions:
  contents: read

jobs:
  add-to-collection:
    runs-on: ubuntu-latest
    env:
      # SNYK_ORG_IDはGitHub Secretsで管理することを推奨します
      SNYK_ORG_ID: ${{ secrets.SNYK_ORG_ID }}
      # APIエンドポイント（必要に応じて上書き可能）
      SNYK_API_ENDPOINT: https://api.snyk.io/rest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pre stage (dummy)
        run: |
          echo "[pre] dummy stage"
          echo "image_uri=${{ inputs.image_uri }}"
          echo "collection_name=${{ inputs.collection_name }}"

      - name: Validate inputs and env
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${SNYK_ORG_ID:-}" ]]; then
            echo "Error: SNYK_ORG_ID is not set (expected in repository Secrets)." >&2
            exit 1
          fi
          if [[ -z "${{ inputs.image_uri }}" ]]; then
            echo "Error: image_uri is required." >&2
            exit 1
          fi
          if [[ -z "${{ inputs.collection_name }}" ]]; then
            echo "Error: collection_name is required." >&2
            exit 1
          fi

      - name: Get collections and extract target collection id
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          TARGET_COLLECTION_NAME="${{ inputs.collection_name }}"
          echo "Fetching collections from ${SNYK_API_ENDPOINT}/orgs/${SNYK_ORG_ID}/collections?version=2024-05-23"
          curl -sS \
            -H "Authorization: token ${SNYK_TOKEN}" \
            -H "Accept: application/vnd.api+json" \
            "${SNYK_API_ENDPOINT}/orgs/${SNYK_ORG_ID}/collections?version=2024-05-23&page%5Blimit%5D=200" \
            --fail \
            -o collections.json

          echo "Locate collection id by name: ${TARGET_COLLECTION_NAME}"
          COLLECTION_ID=$(jq -r --arg NAME "${TARGET_COLLECTION_NAME}" '.data[] | select(.attributes.name == $NAME) | .id' collections.json | head -n1)

          if [[ -z "${COLLECTION_ID}" || "${COLLECTION_ID}" == "null" ]]; then
            echo "Error: Collection named '${TARGET_COLLECTION_NAME}' not found." >&2
            echo "Available collections:" >&2
            jq -r '.data[].attributes.name' collections.json >&2 || true
            exit 1
          fi

          echo "Found target collection id: ${COLLECTION_ID}"
          echo "collection_id=${COLLECTION_ID}" >> "$GITHUB_ENV"

      - name: Add project to collection via Snyk API
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          PROJECT_ID="${{ inputs.image_uri }}"  # 指示に従い image_uri を PROJECT_ID として使用
          COLLECTION_ID="${{ env.collection_id }}"

          echo "Preparing JSON:API payload to add project to collection"
          PAYLOAD=$(jq -n --arg PID "$PROJECT_ID" '{data: [{type: "projects", id: $PID}]}')

          echo "POST ${SNYK_API_ENDPOINT}/orgs/${SNYK_ORG_ID}/collections/${COLLECTION_ID}/relationships/projects?version=2024-05-23"
          echo "$PAYLOAD" | jq '.'

          curl -sS -X POST \
            "${SNYK_API_ENDPOINT}/orgs/${SNYK_ORG_ID}/collections/${COLLECTION_ID}/relationships/projects?version=2024-05-23" \
            -H "Authorization: token ${SNYK_TOKEN}" \
            -H "Content-Type: application/vnd.api+json" \
            -d "$PAYLOAD" \
            --fail

          echo "Project added to collection successfully."

      - name: Post stage (dummy)
        run: |
          echo "[post] dummy stage"
